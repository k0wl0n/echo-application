---
name: CICD Pipeline
on:
  push:
    tags:
      - stg-v.*
      - prod-v.*
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_GAR_SA_KEY }}

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: |
          gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      - name: Build and push image to Google Artifact Registry
        run: |
          # Define the image name and tags
          IMAGE_NAME=asia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/echo-application/go-echo
          VERSION_TAG=${{ github.ref_name }}

          cd go-echo

          # Build the image with multiple tags
          docker build -t $IMAGE_NAME:$VERSION_TAG -t $IMAGE_NAME:latest .

          # Push both tags to the registry
          docker push $IMAGE_NAME:$VERSION_TAG
          docker push $IMAGE_NAME:latest

  generate-kustomize-manifests:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.ref_name }}
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"
      
      - name: Update Kubernetes resources
        env:
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          cd deploy
          kustomize edit set image go-echo=asia-southeast1-docker.pkg.dev/kubernetes-cluster-252525/echo-application/go-echo:$IMAGE_TAG
          cat kustomization.yml
          cd ..
          
      - name: Commit files
        run: |
          git config --global user.email "wahyuanggana1@gmail.com"
          git config --global user.name "wahyu anggana"
          git commit -am "rolling image to tag $GITHUB_SHA"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Kustomize manifests to GitOps repo
        run: |
          git config --global user.email "wahyuanggana1@gmail.com"
          git config --global user.name "wahyu anggana"
          git clone https://${{ secrets.REPO_TOKEN }}@github.com/k0wl0n/monorepo-echo-application.git
          cd monorepo-echo-application
          cp -r ../deploy ./go-echo
          git add .
          git commit -m "Deploy to tag $IMAGE_TAG"
          git push

  # deploy-to-gke:
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_TAG: ${{ github.ref_name }}
  #   needs: generate-kustomize-manifests
  #   steps:
  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_GKE_SA_KEY }}
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}

  #     - name: Clone GitOps Repository
  #       run: |
  #         git clone https://${{ secrets.REPO_TOKEN }}@github.com/k0wl0n/monorepo-echo-application.git
  #         pwd
  #         cd monorepo-echo-application
  #         ls -lah

  #     - name: Set up GCloud SDK
  #       uses: google-github-actions/setup-gcloud@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_GKE_SA_KEY }}
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}
      
  #     - name: Install gke-gcloud-auth-plugin
  #       run: |
  #         sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

  #     - name: Set up Kubeconfig
  #       run: |
  #         gcloud container clusters get-credentials primary-gke-cluster --zone asia-southeast1 --project ${{ secrets.GCP_PROJECT_ID }}

  #     - name: Deploy to GKE using Kustomize
  #       run: |
  #         cd monorepo-echo-application
  #         ls -lah overlays/${{ github.ref_name }}
  #         cat overlays/${{ github.ref_name }}/kustomization.yaml
  #         kubectl apply -k overlays/${{ github.ref_name }} --validate=false

